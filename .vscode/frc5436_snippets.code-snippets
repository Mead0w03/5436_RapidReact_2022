{
	// Place your github-tutorial workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

		"Class Template Headers": {
		"scope": "java",
		"prefix": "ct",
		"body": [
			"// **********************************************",
			"// Class Variables",
			"// **********************************************",
			"",
			"",
			"// **********************************************",
			"// Instance Variables",
			"// **********************************************",
			"",
			"",
			"// **********************************************",
			"// Constructors",
			"// **********************************************",
			"",
			"",
			"// **********************************************",
			"// Getters & Setters",
			"// **********************************************",
			"",
			"",
			"// **********************************************",
			"// Class Methods",
			"// **********************************************",
			"",
			"",
			"// **********************************************",
			"// Instance Methods",
			"// **********************************************",
			"",
			"",

		],
		"description": "Insert labels for java class template."
	},
	"Print Class and Method for Debugging": {
		"prefix": "pcm",
		"body": [
			"System.out.println(String.format(\"Entering %s::%s\", this.getClass().getSimpleName(), new Throwable().getStackTrace()[0].getMethodName()));",
			"",
		],
		"description": "Print Class and Method for Debugging"
	},
}